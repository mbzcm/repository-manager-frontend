{"version":3,"sources":["util/config.js","constants/ActionTypes.js","constants/ThemeSetting.js","appRedux/reducers/Settings.js","appRedux/reducers/Common.js","appRedux/reducers/Commit.js","appRedux/reducers/index.js","appRedux/store/index.js","lngProvider/entries/en-US.js","lngProvider/index.js","lngProvider/entries/es_ES.js","util/CustomScrollbars.js","containers/Topbar/languageData.js","components/SearchBox/index.js","components/UserInfo/index.js","components/AppNotification/NotificationItem.js","components/AppNotification/data.js","util/Auxiliary.js","components/AppNotification/index.js","util/IntlMessages.js","containers/Topbar/HorizontalNav.js","appRedux/actions/Setting.js","appRedux/actions/Common.js","util/Api.js","containers/Topbar/HorizontalDefault/index.js","containers/Topbar/HorizontalDark/index.js","containers/Topbar/InsideHeader/index.js","containers/Topbar/AboveHeader/index.js","containers/Topbar/BelowHeader/index.js","containers/Topbar/index.js","routes/commitView/index.js","appRedux/actions/Commit.js","routes/index.js","containers/Topbar/NoHeaderNotification/index.js","containers/Sidebar/SidebarLogo.js","containers/Sidebar/UserProfile.js","containers/Sidebar/AppsNavigation.js","containers/Sidebar/SidebarContent.js","containers/Sidebar/index.js","containers/App/AppSidebar.js","containers/App/MainApp.js","containers/App/index.js","NextApp.js","registerServiceWorker.js","index.js"],"names":["module","exports","footerText","TOGGLE_COLLAPSED_NAV","WINDOW_WIDTH","SWITCH_LANGUAGE","FETCH_START","FETCH_SUCCESS","FETCH_ERROR_UPDATE","FETCH_ERROR","SHOW_MESSAGE","HIDE_MESSAGE","INIT_URL","COMMIT_DATA","THEME_TYPE","THEME_TYPE_LITE","THEME_COLOR","UPDATE_RTL_STATUS","LAYOUT_TYPE","LAYOUT_TYPE_FULL","NAV_STYLE","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_DRAWER","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_DEFAULT_HORIZONTAL","NAV_STYLE_DARK_HORIZONTAL","NAV_STYLE_INSIDE_HEADER_HORIZONTAL","NAV_STYLE_BELOW_HEADER","NAV_STYLE_ABOVE_HEADER","TAB_SIZE","initialSettings","navStyle","layoutType","themeType","themeColor","isDirectionRTL","locale","languageId","name","icon","SettingsReducer","state","action","type","rtlStatus","payload","INIT_STATE","error","loading","message","navCollapsed","width","window","innerWidth","pathname","CommonReducer","location","initURL","commits","couponError","couponUpdateError","createRootReducer","history","combineReducers","router","connectRouter","settings","Settings","common","Common","commit","Commit","createBrowserHistory","require","routeMiddleware","routerMiddleware","middlewares","thunk","EnLang","messages","enMessages","antd","antdEN","AppLocale","en","enLang","es","saMessages","antdES","CustomScrollbars","props","autoHide","renderTrackHorizontal","style","display","className","languageData","SearchBox","styleName","placeholder","onChange","value","defaultProps","UserInfo","userMenuOptions","overlayClassName","placement","content","trigger","src","alt","NotificationItem","notification","image","title","time","notifications","Auxiliary","children","AppNotification","map","index","injectIntl","withRef","SubMenu","Menu","HorizontalNav","ItemGroup","useSelector","selectedKeys","substr","defaultOpenKeys","split","mode","getNavStyleSubMenuClass","IntlMessages","id","Item","to","toggleCollapsedSideNav","switchLanguage","dispatch","axios","create","baseURL","process","headers","Header","Layout","Option","Select","menu","onClick","e","info","handleChange","HorizontalDefault","useState","searchText","setSearchText","useDispatch","updateSearchChatUser","evt","target","defaultValue","overlay","Icon","language","JSON","stringify","HorizontalDark","InsideHeader","AboveHeader","BelowHeader","Topbar","CommitView","filteredInfo","sortedInfo","getCommits","this","columns","dataIndex","key","render","text","href","dataSource","React","Component","connect","getState","get","then","data","console","log","catch","App","match","path","url","component","commitView","NoHeaderNotification","SidebarLogo","sidebarCollapsed","setSidebarCollapsed","UserProfile","AppsNavigation","SidebarContent","getNoHeaderClass","theme","memo","Sider","Sidebar","useEffect","drawerStyle","collapsed","collapsible","closable","onClose","visible","SIDEBAR_VISIBLE_ON","AppSidebar","includes","Content","Footer","getContainerClass","getNavStyles","MainApp","useRouteMatch","addEventListener","document","documentElement","classList","add","setAttribute","remove","lang","body","contains","setLayoutType","setNavStyle","currentAppLocale","direction","store","preloadedState","createStore","compose","applyMiddleware","configureStore","NextApp","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dac66a60.chunk.js","sourcesContent":["module.exports = {\r\n  footerText: 'Copyright RepoManager © 2022',\r\n}\r\n","// Customizer const\r\nexport const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSE_MENU';\r\nexport const WINDOW_WIDTH = 'WINDOW-WIDTH';\r\nexport const SWITCH_LANGUAGE = 'SWITCH-LANGUAGE';\r\n\r\n//Contact Module const\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR_UPDATE = 'FETCH_ERROR_UPDATE';\r\nexport const FETCH_ERROR = 'fetch_error';\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE';\r\nexport const HIDE_MESSAGE = 'HIDE_MESSAGE';\r\nexport const ON_SHOW_LOADER = 'ON_SHOW_LOADER';\r\nexport const ON_HIDE_LOADER = 'ON_HIDE_LOADER';\r\n\r\n//Auth const\r\nexport const SIGNUP_USER = 'SIGNUP_USER';\r\nexport const SIGNUP_USER_SUCCESS = 'SIGNUP_USER_SUCCESS';\r\nexport const SIGNIN_GOOGLE_USER = 'SIGNIN_GOOGLE_USER';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'SIGNIN_GOOGLE_USER_SUCCESS';\r\nexport const SIGNIN_FACEBOOK_USER = 'SIGNIN_FACEBOOK_USER';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'SIGNIN_FACEBOOK_USER_SUCCESS';\r\nexport const SIGNIN_TWITTER_USER = 'SIGNIN_TWITTER_USER';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'SIGNIN_TWITTER_USER_SUCCESS';\r\nexport const SIGNIN_GITHUB_USER = 'SIGNIN_GITHUB_USER';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_success';\r\nexport const SIGNIN_USER = 'SIGNIN_USER';\r\nexport const SIGNIN_USER_SUCCESS = 'SIGNIN_USER_SUCCESS';\r\nexport const SIGNOUT_USER = 'SIGNOUT_USER';\r\nexport const SIGNOUT_USER_SUCCESS = 'SIGNOUT_USER_SUCCESS';\r\nexport const INIT_URL = 'INIT_URL';\r\nexport const USER_DATA = 'user_data';\r\nexport const USER_TOKEN_SET = 'user_token_set';\r\n\r\n\r\n\r\nexport const COMMIT_DATA = 'COMMIT_DATA';\r\n","// Customizer const\r\nexport const THEME_TYPE = 'THEME_TYPE';\r\nexport const THEME_TYPE_LITE = 'THEME_TYPE_LITE';\r\nexport const THEME_TYPE_DARK = 'THEME_TYPE_DARK';\r\nexport const THEME_TYPE_SEMI_DARK = 'THEME_TYPE_SEMI_DARK';\r\n\r\nexport const THEME_COLOR = 'THEME_COLOR';\r\nexport const UPDATE_RTL_STATUS = 'UPDATE_RTL_STATUS';\r\nexport const LAYOUT_TYPE = 'LAYOUT_TYPE';\r\n\r\nexport const LAYOUT_TYPE_FRAMED = 'LAYOUT_TYPE_FRAMED';\r\nexport const LAYOUT_TYPE_BOXED = 'LAYOUT_TYPE_BOXED';\r\nexport const LAYOUT_TYPE_FULL = 'LAYOUT_TYPE_FULL';\r\n\r\nexport const NAV_STYLE = 'NAV_STYLE';\r\n\r\nexport const NAV_STYLE_FIXED = 'NAV_STYLE_FIXED';\r\nexport const NAV_STYLE_MINI_SIDEBAR = 'NAV_STYLE_MINI_SIDEBAR';\r\nexport const NAV_STYLE_DRAWER = 'NAV_STYLE_DRAWER';\r\nexport const NAV_STYLE_NO_HEADER_MINI_SIDEBAR = 'NAV_STYLE_NO_HEADER_MINI_SIDEBAR';\r\nexport const NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR = 'NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR';\r\n\r\nexport const NAV_STYLE_DEFAULT_HORIZONTAL = 'NAV_STYLE_DEFAULT_HORIZONTAL';\r\nexport const NAV_STYLE_DARK_HORIZONTAL = 'NAV_STYLE_DARK_HORIZONTAL';\r\nexport const NAV_STYLE_INSIDE_HEADER_HORIZONTAL = 'NAV_STYLE_INSIDE_HEADER_HORIZONTAL';\r\nexport const NAV_STYLE_BELOW_HEADER = 'NAV_STYLE_BELOW_HEADER';\r\nexport const NAV_STYLE_ABOVE_HEADER = 'NAV_STYLE_ABOVE_HEADER';\r\n\r\nexport const LIGHT_PURPLE = 'light_purple';\r\nexport const LIGHT_PURPLE_SEC = '#00B378';\r\nexport const LIGHT_PURPLE_DARK_TEXT_COLOR = '#9799AC';\r\n\r\nexport const RED = 'red';\r\nexport const RED_SEC = '#00D9C9';\r\nexport const RED_DARK_TEXT_COLOR = '#878BAB';\r\n\r\nexport const BLUE = 'blue';\r\nexport const BLUE_SEC = '#FCB53B';\r\nexport const BLUE_DARK_TEXT_COLOR = '#AAA59A';\r\n\r\nexport const DARK_BLUE = 'dark_blue';\r\nexport const DARK_BLUE_SEC = '#17BDE5';\r\nexport const DARK_BLUE_DARK_TEXT_COLOR = '#9DDAE9';\r\n\r\nexport const ORANGE = 'orange';\r\nexport const ORANGE_SEC = '#F1D065';\r\nexport const ORANGE_DARK_TEXT_COLOR = '#ABA895';\r\n\r\nexport const LIGHT_BLUE = 'light_blue';\r\nexport const LIGHT_BLUE_SEC = '#59DCFF';\r\nexport const LIGHT_BLUE_DARK_TEXT_COLOR = '#92A2C8';\r\n\r\nexport const DEEP_ORANGE = 'deep_orange';\r\nexport const DEEP_ORANGE_SEC = '#70A288';\r\nexport const DEEP_ORANGE_DARK_TEXT_COLOR = '#97B8C7';\r\n\r\nexport const LIGHT_PURPLE_1 = 'light_purple_1';\r\nexport const LIGHT_PURPLE_1_SEC = '#E14594';\r\nexport const LIGHT_PURPLE_1_DARK_TEXT_COLOR = '#8288B4';\r\n\r\nexport const LIGHT_PURPLE_2 = 'light_purple_2';\r\nexport const LIGHT_PURPLE_2_SEC = '#64D7D6';\r\nexport const LIGHT_PURPLE_2_DARK_TEXT_COLOR = '#5782BB';\r\n\r\nexport const ACTIVE_COLOR_OPTION = '#ffffff';\r\n\r\nexport const TAB_SIZE = 992;\r\n","import {SWITCH_LANGUAGE} from \"../../constants/ActionTypes\";\r\nimport {\r\n  LAYOUT_TYPE,\r\n  LAYOUT_TYPE_FULL,\r\n  NAV_STYLE,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  THEME_COLOR,\r\n  THEME_TYPE,\r\n  THEME_TYPE_LITE, UPDATE_RTL_STATUS, ORANGE,\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst initialSettings = {\r\n  navStyle: NAV_STYLE_MINI_SIDEBAR,\r\n  layoutType: LAYOUT_TYPE_FULL,\r\n  themeType: THEME_TYPE_LITE,\r\n  themeColor: ORANGE,\r\n\r\n  isDirectionRTL: false,\r\n  locale: {\r\n    languageId: 'spanish',\r\n    locale: 'es',\r\n    name: 'Spanish',\r\n    icon: 'es'\r\n  }\r\n};\r\n\r\nconst SettingsReducer = (state = initialSettings, action) => {\r\n  switch (action.type) {\r\n\r\n    case THEME_TYPE:\r\n      return {\r\n        ...state,\r\n        themeType: action.themeType\r\n      };\r\n    case THEME_COLOR:\r\n      return {\r\n        ...state,\r\n        themeColor: action.themeColor\r\n      };\r\n\r\n    case UPDATE_RTL_STATUS:\r\n      return {\r\n        ...state,\r\n        isDirectionRTL: action.rtlStatus\r\n      };\r\n\r\n    case NAV_STYLE:\r\n      return {\r\n        ...state,\r\n        navStyle: action.navStyle\r\n      };\r\n    case LAYOUT_TYPE:\r\n      return {\r\n        ...state,\r\n        layoutType: action.layoutType\r\n      };\r\n\r\n    case SWITCH_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        locale: action.payload,\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SettingsReducer;\r\n","import {FETCH_ERROR, FETCH_START, FETCH_SUCCESS, HIDE_MESSAGE, SHOW_MESSAGE} from '../../constants/ActionTypes'\r\nimport {TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH} from \"../../constants/ActionTypes\";\r\n\r\nconst INIT_STATE = {\r\n  error: \"\",\r\n  loading: false,\r\n  message: '',\r\n  navCollapsed: true,\r\n  width: window.innerWidth,\r\n  pathname: '/',\r\n};\r\n\r\nconst CommonReducer = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case '@@router/LOCATION_CHANGE': {\r\n      return {\r\n        ...state,\r\n        pathname: action.payload.location.pathname,\r\n        navCollapsed: false\r\n      }\r\n    }\r\n    case WINDOW_WIDTH:\r\n      return {\r\n        ...state,\r\n        width: action.width,\r\n      };\r\n    case TOGGLE_COLLAPSED_NAV: {\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      }\r\n    }\r\n    case FETCH_START: {\r\n      return {...state, error: '', message: '', loading: true};\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return {...state, error: '', message: '', loading: false};\r\n    }\r\n    case SHOW_MESSAGE: {\r\n      return {...state, error: '', message: action.payload, loading: false};\r\n    }\r\n    case FETCH_ERROR: {\r\n      return {...state, loading: false, error: action.payload, message: ''};\r\n    }\r\n    case HIDE_MESSAGE: {\r\n      return {...state, loading: false, error: '', message: ''};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default CommonReducer;\r\n","import {INIT_URL,COMMIT_DATA, FETCH_ERROR , FETCH_ERROR_UPDATE} from \"../../constants/ActionTypes\";\r\n\r\nconst INIT_STATE = {\r\n  initURL: '',\r\n\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n\r\n\r\n    case INIT_URL: {\r\n      return {...state, initURL: action.payload};\r\n    }\r\n\r\n    case COMMIT_DATA: {\r\n      return {\r\n        ...state,\r\n        commits: action.payload,\r\n      };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    case FETCH_ERROR: {\r\n      return {\r\n        ...state,\r\n        couponError: action.payload,\r\n      };\r\n    }\r\n\r\n    case FETCH_ERROR_UPDATE: {\r\n      return {\r\n        ...state,\r\n        couponUpdateError: action.payload,\r\n      };\r\n    }\r\n\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport Settings from \"./Settings\";\r\nimport Common from \"./Common\";\r\nimport {connectRouter} from 'connected-react-router'\r\nimport Commit from \"../reducers/Commit\";\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  settings: Settings,\r\n  common: Common,\r\n  commit: Commit,\r\n});\r\n\r\nexport default createRootReducer;\r\n","import {applyMiddleware, compose, createStore} from 'redux'\r\nimport {routerMiddleware} from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../reducers'\r\n\r\nconst createBrowserHistory = require('history').createBrowserHistory;\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst routeMiddleware = routerMiddleware(history);\r\n\r\nconst middlewares = [thunk, routeMiddleware];\r\n\r\n\r\nexport default function configureStore(preloadedState = {}) {\r\n  return  createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      ),\r\n    ),\r\n  );\r\n}\r\n","import antdEN from \"antd/lib/locale-provider/en_US\";\r\nimport enMessages from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  messages: {\r\n    ...enMessages\r\n  },\r\n  antd: antdEN,\r\n  locale: 'en-US',\r\n};\r\nexport default EnLang;\r\n","import enLang from \"./entries/en-US\";\r\nimport esLang from \"./entries/es_ES\";\r\n\r\nconst AppLocale = {\r\n  en: enLang,\r\n  es: esLang,\r\n};\r\n\r\nexport default AppLocale;\r\n","import antdES from \"antd/lib/locale-provider/es_ES\";\r\nimport saMessages from \"../locales/es_ES.json\";\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages\r\n  },\r\n  antd: antdES,\r\n  locale: 'es',\r\n};\r\nexport default saLang;\r\n","import React from \"react\";\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\n\r\nconst CustomScrollbars = (props) => <Scrollbars  {...props} autoHide\r\n                                                 renderTrackHorizontal={props => <div {...props}\r\n                                                                                      style={{display: 'none'}}\r\n                                                                                      className=\"track-horizontal\"/>}/>;\r\n\r\nexport default CustomScrollbars;\r\n","const languageData = [\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'us'\r\n  },\r\n  {\r\n    languageId: 'spanish',\r\n    locale: 'es',\r\n    name: 'Spanish',\r\n    icon: 'es'\r\n  },\r\n\r\n\r\n];\r\nexport default languageData;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({styleName, placeholder, onChange, value}) => {\r\n\r\n  return (\r\n    <div className={`gx-search-bar ${styleName}`}>\r\n      <div className=\"gx-form-group\">\r\n        <input className=\"ant-input\" type=\"search\" placeholder={placeholder} onChange={onChange}\r\n               value={value}/>\r\n        <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default SearchBox;\r\n\r\nSearchBox.defaultProps = {\r\n  styleName: \"\",\r\n  value: \"\",\r\n};\r\n","import React from \"react\";\r\nimport {Avatar, Popover} from \"antd\";\r\n\r\nconst UserInfo = () => {\r\n\r\n  const userMenuOptions = (\r\n    <ul className=\"gx-user-popover\">\r\n      <li>My Account</li>\r\n      <li>Connections</li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={userMenuOptions}\r\n             trigger=\"click\">\r\n      <Avatar src={\"https://via.placeholder.com/150\"}\r\n              className=\"gx-avatar gx-pointer\" alt=\"\"/>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport {Avatar} from \"antd\";\r\n\r\n\r\nconst NotificationItem = ({notification}) => {\r\n  const {icon, image, title, time} = notification;\r\n  return (\r\n\r\n    <li className=\"gx-media\">\r\n      <Avatar className=\"gx-size-40 gx-mr-3\"\r\n              alt={image}\r\n              src={image}/>\r\n      <div className=\"gx-media-body gx-align-self-center\">\r\n        <p className=\"gx-fs-sm gx-mb-0\">{title}</p>\r\n        <i className={`icon icon-${icon} gx-pr-2`}/> <span className=\"gx-meta-date\"><small>{time}</small></span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","export const notifications = [\r\n\r\n  {\r\n    image: \"https://via.placeholder.com/150\",\r\n    title: \"Stella Johnson has recently posted an album\",\r\n    time: \"4:10 PM\",\r\n    icon: \"thumb-up gx-text-blue\",\r\n  }, {\r\n    image: \"https://via.placeholder.com/150\",\r\n    title: \"Alex Brown has shared Martin Guptil's post\",\r\n    time: \"5:18 PM\",\r\n    icon: \"chat gx-text-grey\",\r\n  }, {\r\n    image:\"https://via.placeholder.com/150\",\r\n    title: \"Domnic Brown has sent you a group invitation for Global Health\",\r\n    time: \"5:36 PM\",\r\n    icon: \"birthday text-info\",\r\n  }, {\r\n    image:\"https://via.placeholder.com/150\",\r\n    title: \"John Smith has birthday today\",\r\n    time: \"5:54 PM\",\r\n    icon: \"birthday gx-text-warning\",\r\n  }, {\r\n    image: \"https://via.placeholder.com/150\",\r\n    title: \"Chris has updated his profile picture\",\r\n    time: \"5:25 PM\",\r\n    icon: \"profile gx-text-grey\",\r\n  }\r\n];\r\n","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","import React from \"react\";\r\nimport NotificationItem from \"./NotificationItem\";\r\nimport {notifications} from \"./data\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nconst AppNotification = () => {\r\n  return (\r\n    <Auxiliary>\r\n      <div className=\"gx-popover-header\">\r\n        <h3 className=\"gx-mb-0\">Notifications</h3>\r\n        <i className=\"gx-icon-btn icon icon-charvlet-down\"/>\r\n      </div>\r\n      <CustomScrollbars className=\"gx-popover-scroll\">\r\n        <ul className=\"gx-sub-popover\">\r\n          {notifications.map((notification, index) => <NotificationItem key={index}\r\n                                                                        notification={notification}/>)\r\n          }\r\n        </ul>\r\n      </CustomScrollbars>\r\n    </Auxiliary>\r\n  )\r\n};\r\n\r\nexport default AppNotification;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false\r\n});\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\nimport {\r\n  NAV_STYLE_ABOVE_HEADER,\r\n  NAV_STYLE_BELOW_HEADER,\r\n  NAV_STYLE_DEFAULT_HORIZONTAL,\r\n  NAV_STYLE_INSIDE_HEADER_HORIZONTAL\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst HorizontalNav = () => {\r\n  const navStyle = useSelector(({settings}) => settings.navStyle);\r\n  const pathname = useSelector(({common}) => common.pathname);\r\n\r\n  const getNavStyleSubMenuClass = (navStyle) => {\r\n    switch (navStyle) {\r\n      case NAV_STYLE_DEFAULT_HORIZONTAL:\r\n        return \"gx-menu-horizontal gx-submenu-popup-curve\";\r\n      case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\r\n        return \"gx-menu-horizontal gx-submenu-popup-curve gx-inside-submenu-popup-curve\";\r\n      case NAV_STYLE_BELOW_HEADER:\r\n        return \"gx-menu-horizontal gx-submenu-popup-curve gx-below-submenu-popup-curve\";\r\n      case NAV_STYLE_ABOVE_HEADER:\r\n        return \"gx-menu-horizontal gx-submenu-popup-curve gx-above-submenu-popup-curve\";\r\n      default:\r\n        return \"gx-menu-horizontal\";\r\n    }\r\n  };\r\n\r\n  const selectedKeys = pathname.substr(1);\r\n  const defaultOpenKeys = selectedKeys.split('/')[1];\r\n  return (\r\n    <Menu\r\n      defaultOpenKeys={[defaultOpenKeys]}\r\n      selectedKeys={[selectedKeys]}\r\n      mode=\"horizontal\">\r\n      <SubMenu className={getNavStyleSubMenuClass(navStyle)} key=\"main\" title={<IntlMessages id=\"sidebar.main\"/>}>\r\n        <Menu.Item key=\"sample\">\r\n          <Link to=\"/sample\">\r\n            <i className=\"icon icon-widgets\"/>\r\n            <IntlMessages id=\"sidebar.samplePage\"/>\r\n          </Link>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n\r\n    </Menu>\r\n\r\n  );\r\n};\r\n\r\nHorizontalNav.propTypes = {};\r\n\r\nexport default HorizontalNav;\r\n\r\n","import {SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH} from \"../../constants/ActionTypes\";\r\nimport {LAYOUT_TYPE, NAV_STYLE, THEME_COLOR, THEME_TYPE, UPDATE_RTL_STATUS} from \"../../constants/ThemeSetting\";\r\n\r\nexport function toggleCollapsedSideNav(navCollapsed) {\r\n  return {type: TOGGLE_COLLAPSED_NAV, navCollapsed};\r\n}\r\n\r\nexport function updateWindowWidth(width) {\r\n  return (dispatch) => {\r\n    dispatch({type: WINDOW_WIDTH, width});\r\n  }\r\n}\r\n\r\nexport function setThemeType(themeType) {\r\n  return (dispatch) => {\r\n    dispatch({type: THEME_TYPE, themeType});\r\n  }\r\n}\r\n\r\nexport function setThemeColor(themeColor) {\r\n  return (dispatch) => {\r\n    dispatch({type: THEME_COLOR, themeColor});\r\n  }\r\n}\r\n\r\nexport function setDirectionRTL(rtlStatus) {\r\n  return (dispatch) => {\r\n    dispatch({type: UPDATE_RTL_STATUS, rtlStatus});\r\n  }\r\n}\r\n\r\nexport function onNavStyleChange(navStyle) {\r\n  return (dispatch) => {\r\n    dispatch({type: NAV_STYLE, navStyle});\r\n  }\r\n}\r\n\r\nexport function onLayoutTypeChange(layoutType) {\r\n  return (dispatch) => {\r\n    dispatch({type: LAYOUT_TYPE, layoutType});\r\n  }\r\n}\r\n\r\nexport function switchLanguage(locale) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SWITCH_LANGUAGE,\r\n      payload: locale\r\n    });\r\n  }\r\n}\r\n","import {FETCH_ERROR, FETCH_START, FETCH_SUCCESS, HIDE_MESSAGE, SHOW_MESSAGE} from \"../../constants/ActionTypes\";\r\n\r\nexport const fetchStart = () => {\r\n  return {\r\n    type: FETCH_START\r\n  }\r\n};\r\n\r\nexport const fetchSuccess = () => {\r\n  return {\r\n    type: FETCH_SUCCESS\r\n  }\r\n};\r\n\r\nexport const fetchError = (error) => {\r\n  return {\r\n    type: FETCH_ERROR,\r\n    payload: error\r\n  }\r\n};\r\n\r\nexport const showMessage = (message) => {\r\n  return {\r\n    type: SHOW_MESSAGE,\r\n    payload: message\r\n  }\r\n};\r\n\r\nexport const hideMessage = () => {\r\n  return {\r\n    type: HIDE_MESSAGE\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_END_POINT,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dropdown, Layout, Menu, message, Popover, Select} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport languageData from \"../languageData\";\r\nimport SearchBox from \"../../../components/SearchBox\";\r\nimport UserInfo from \"../../../components/UserInfo\";\r\nimport AppNotification from \"../../../components/AppNotification\";\r\nimport MailNotification from \"../../../components/MailNotification\";\r\nimport HorizontalNav from \"../HorizontalNav\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport {TAB_SIZE} from \"../../../constants/ThemeSetting\";\r\n\r\nconst {Header} = Layout;\r\nconst Option = Select.Option;\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Products</Menu.Item>\r\n    <Menu.Item key=\"2\">Apps</Menu.Item>\r\n    <Menu.Item key=\"3\">Blogs</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction handleMenuClick(e) {\r\n  message.info('Click on menu item.');\r\n}\r\n\r\nfunction handleChange(value) {\r\n}\r\n\r\nconst HorizontalDefault = () => {\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const {locale} = useSelector(({settings}) => settings);\r\n  const [searchText, setSearchText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-header-horizontal\">\r\n      <div className=\"gx-header-horizontal-top\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-top-flex\">\r\n            <div className=\"gx-header-horizontal-top-left\">\r\n              <i className=\"icon icon-alert gx-mr-3\"/>\r\n              <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n            </div>\r\n            <ul className=\"gx-login-list\">\r\n              <li>Login</li>\r\n              <li>Signup</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Header\r\n        className=\"gx-header-horizontal-main\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-main-flex\">\r\n\r\n            <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n                 }}\r\n              />\r\n\r\n            </div>\r\n            \r\n            <div className=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n              <SearchBox styleName=\"gx-lt-icon-search-bar-lg\"\r\n                         placeholder=\"Search in app...\"\r\n                         onChange={updateSearchChatUser}\r\n                         value={searchText}/>\r\n\r\n              <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\r\n                <Option value=\"jack\">Products</Option>\r\n                <Option value=\"lucy\">Apps</Option>\r\n                <Option value=\"Yiminghe\">Blogs</Option>\r\n              </Select>\r\n            </div>\r\n\r\n            <ul className=\"gx-header-notifications gx-ml-auto\">\r\n              <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n                  <div className=\"gx-d-flex\">\r\n                    <Dropdown overlay={menu}>\r\n                      <Button>\r\n                        Category <Icon type=\"down\"/>\r\n                      </Button>\r\n                    </Dropdown>\r\n                    <SearchBox styleName=\"gx-popover-search-bar\"\r\n                               placeholder=\"Search in app...\"\r\n                               onChange={updateSearchChatUser}\r\n                               value={searchText}/>\r\n                  </div>\r\n                } trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-notify\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                         trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-msg\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={<MailNotification/>} trigger=\"click\">\r\n                <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\"/>\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-language\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={languageMenu()} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-flex-row gx-align-items-center\"><i\r\n                className={`flag flag-24 flag-${locale.icon}`}/>\r\n              </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-user-nav\"><UserInfo/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n\r\n      {width >= TAB_SIZE && (\r\n        <div className=\"gx-header-horizontal-nav gx-header-horizontal-nav-curve\">\r\n          <div className=\"gx-container\">\r\n            <div className=\"gx-header-horizontal-nav-flex\">\r\n              <HorizontalNav/>\r\n              <ul className=\"gx-header-notifications gx-ml-auto\">\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-menu-lines\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-setting\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-apps-new\"/></span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dropdown, Layout, Menu, message, Popover, Select} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport languageData from \"../languageData\";\r\nimport SearchBox from \"../../../components/SearchBox\";\r\nimport UserInfo from \"../../../components/UserInfo\";\r\nimport AppNotification from \"../../../components/AppNotification\";\r\nimport MailNotification from \"../../../components/MailNotification\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HorizontalNav from \"../HorizontalNav\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport {TAB_SIZE} from \"../../../constants/ThemeSetting\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst Option = Select.Option;\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Products</Menu.Item>\r\n    <Menu.Item key=\"2\">Apps</Menu.Item>\r\n    <Menu.Item key=\"3\">Blogs</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction handleMenuClick(e) {\r\n  message.info('Click on menu item.');\r\n}\r\n\r\nfunction handleChange(value) {\r\n}\r\n\r\nconst HorizontalDark = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const {locale} = useSelector(({settings}) => settings);\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-header-horizontal gx-header-horizontal-dark\">\r\n      <div className=\"gx-header-horizontal-top\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-top-flex\">\r\n            <div className=\"gx-header-horizontal-top-left\">\r\n              <i className=\"icon icon-alert gx-mr-3\"/>\r\n              <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n            </div>\r\n            <ul className=\"gx-login-list\">\r\n              <li>Login</li>\r\n              <li>Signup</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Header\r\n        className=\"gx-header-horizontal-main\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-main-flex\">\r\n            <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n                 }}\r\n              />\r\n\r\n            </div>\r\n            \r\n            <div className=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n              <SearchBox styleName=\"gx-lt-icon-search-bar-lg\"\r\n                         placeholder=\"Search in app...\"\r\n                         onChange={updateSearchChatUser}\r\n                         value={searchText}/>\r\n\r\n              <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\r\n                <Option value=\"jack\">Products</Option>\r\n                <Option value=\"lucy\">Apps</Option>\r\n                <Option value=\"Yiminghe\">Blogs</Option>\r\n              </Select>\r\n            </div>\r\n\r\n            <ul className=\"gx-header-notifications gx-ml-auto\">\r\n              <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n                  <div className=\"gx-d-flex\"><Dropdown overlay={menu}>\r\n                    <Button>\r\n                      Category <Icon type=\"down\"/>\r\n                    </Button>\r\n                  </Dropdown>\r\n                    <SearchBox styleName=\"gx-popover-search-bar\"\r\n                               placeholder=\"Search in app...\"\r\n                               onChange={updateSearchChatUser}\r\n                               value={searchText}/></div>\r\n                } trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-notify\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                         trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-msg\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={<MailNotification/>} trigger=\"click\">\r\n                <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\"/>\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-language\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={languageMenu()} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-flex-row gx-align-items-center\"><i\r\n                className={`flag flag-24 flag-${locale.icon}`}/>\r\n              </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-user-nav\"><UserInfo/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n\r\n      {width >= TAB_SIZE && (\r\n        <div className=\"gx-header-horizontal-nav\">\r\n          <div className=\"gx-container\">\r\n            <div className=\"gx-header-horizontal-nav-flex\">\r\n              <HorizontalNav/>\r\n              <ul className=\"gx-header-notifications gx-ml-auto\">\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-menu-lines\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-setting\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-apps-new\"/></span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default HorizontalDark;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dropdown, Layout, Menu, message, Popover} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport languageData from \"../languageData\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport AppNotification from \"components/AppNotification\";\r\nimport MailNotification from \"components/MailNotification\";\r\nimport HorizontalNav from \"../HorizontalNav\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport {TAB_SIZE} from \"../../../constants/ThemeSetting\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Products</Menu.Item>\r\n    <Menu.Item key=\"2\">Apps</Menu.Item>\r\n    <Menu.Item key=\"3\">Blogs</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction handleMenuClick(e) {\r\n  message.info('Click on menu item.');\r\n}\r\n\r\nconst InsideHeader = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const {locale} = useSelector(({settings}) => settings);\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-header-horizontal gx-header-horizontal-dark gx-inside-header-horizontal\">\r\n      <div className=\"gx-header-horizontal-top\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-top-flex\">\r\n            <div className=\"gx-header-horizontal-top-left\">\r\n              <i className=\"icon icon-alert gx-mr-3\"/>\r\n              <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n            </div>\r\n            <ul className=\"gx-login-list\">\r\n              <li>Login</li>\r\n              <li>Signup</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Header\r\n        className=\"gx-header-horizontal-main\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-main-flex\">\r\n            <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3 6e\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n                 }}\r\n              />\r\n            </div>\r\n           \r\n\r\n            {width >= TAB_SIZE && (\r\n              <div className=\"gx-header-horizontal-nav gx-header-horizontal-nav-curve\">\r\n                <HorizontalNav/>\r\n              </div>\r\n            )}\r\n\r\n            <ul className=\"gx-header-notifications gx-ml-auto\">\r\n              <li className=\"gx-notify gx-notify-search\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\"\r\n                         placement=\"bottomRight\" content={\r\n                  <div className=\"gx-d-flex\"><Dropdown overlay={menu}>\r\n                    <Button>\r\n                      Category <Icon type=\"down\"/>\r\n                    </Button>\r\n                  </Dropdown>\r\n                    <SearchBox styleName=\"gx-popover-search-bar\"\r\n                               placeholder=\"Search in app...\"\r\n                               onChange={updateSearchChatUser}\r\n                               value={searchText}/></div>\r\n                } trigger=\"click\">\r\n\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-notify\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                         trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-msg\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={<MailNotification/>} trigger=\"click\">\r\n                <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\"/>\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-language\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={languageMenu()} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-flex-row gx-align-items-center\"><i\r\n                className={`flag flag-24 flag-${locale.icon}`}/>\r\n              </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-user-nav\"><UserInfo/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsideHeader;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dropdown, Layout, Menu, message, Popover, Select} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\n\r\nimport languageData from \"../languageData\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport AppNotification from \"components/AppNotification\";\r\nimport MailNotification from \"components/MailNotification\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\n\r\nimport {TAB_SIZE} from \"../../../constants/ThemeSetting\";\r\nimport HorizontalNav from \"../HorizontalNav\";\r\nimport {Link} from \"react-router-dom\";\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst Option = Select.Option;\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Products</Menu.Item>\r\n    <Menu.Item key=\"2\">Blog</Menu.Item>\r\n    <Menu.Item key=\"3\">Apps</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction handleMenuClick() {\r\n  message.info('Click on menu item.');\r\n}\r\n\r\nfunction handleChange(value) {\r\n}\r\n\r\nconst AboveHeader = () => {\r\n  const locale = useSelector(({settings}) => settings.locale);\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const [searchText, setSearchText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-header-horizontal gx-header-horizontal-dark gx-above-header-horizontal\">\r\n\r\n      {width >= TAB_SIZE && (\r\n        <div className=\"gx-header-horizontal-nav gx-header-horizontal-nav-curve\">\r\n          <div className=\"gx-container\">\r\n            <div className=\"gx-header-horizontal-nav-flex\">\r\n              <HorizontalNav/>\r\n              <ul className=\"gx-header-notifications gx-ml-auto\">\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-menu-lines\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-setting\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-apps-new\"/></span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"gx-header-horizontal-top\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-top-flex\">\r\n            <div className=\"gx-header-horizontal-top-left\">\r\n              <i className=\"icon icon-alert gx-mr-3\"/>\r\n              <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n            </div>\r\n            <ul className=\"gx-login-list\">\r\n              <li><IntlMessages id=\"app.userAuth.login\"/></li>\r\n              <li><IntlMessages id=\"app.userAuth.signUp\"/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Header\r\n        className=\"gx-header-horizontal-main\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-main-flex\">\r\n\r\n            <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   if (width <= TAB_SIZE) {\r\n                     dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n                   }\r\n                 }}\r\n              />\r\n            </div>\r\n        \r\n            <div className=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n              <SearchBox styleName=\"gx-lt-icon-search-bar-lg\"\r\n                         placeholder=\"Search in app...\"\r\n                         onChange={updateSearchChatUser}\r\n                         value={searchText}/>\r\n\r\n              <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\r\n                <Option value=\"jack\">Products</Option>\r\n                <Option value=\"lucy\">Apps</Option>\r\n                <Option value=\"Yiminghe\">Blogs</Option>\r\n              </Select>\r\n            </div>\r\n\r\n            <ul className=\"gx-header-notifications gx-ml-auto\">\r\n              <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n                  <div className=\"gx-d-flex\"><Dropdown overlay={menu}>\r\n                    <Button>\r\n                      Category <Icon type=\"down\"/>\r\n                    </Button>\r\n                  </Dropdown>\r\n                    <SearchBox styleName=\"gx-popover-search-bar\"\r\n                               placeholder=\"Search in app...\"\r\n                               onChange={updateSearchChatUser}\r\n                               value={searchText}/></div>\r\n                } trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-notify\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                         trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-msg\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={<MailNotification/>} trigger=\"click\">\r\n                <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\"/>\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-language\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={languageMenu()} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-flex-row gx-align-items-center\"><i\r\n                className={`flag flag-24 flag-${locale.icon}`}/>\r\n              </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-user-nav\"><UserInfo/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AboveHeader;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dropdown, Layout, Menu, message, Popover, Select} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport languageData from \"../languageData\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport AppNotification from \"components/AppNotification\";\r\nimport MailNotification from \"components/MailNotification\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\nimport HorizontalNav from \"../HorizontalNav\";\r\nimport {Link} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {TAB_SIZE} from \"../../../constants/ThemeSetting\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst Option = Select.Option;\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Products</Menu.Item>\r\n    <Menu.Item key=\"2\">Apps</Menu.Item>\r\n    <Menu.Item key=\"3\">Blogs</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nfunction handleMenuClick(e) {\r\n  message.info('Click on menu item.');\r\n}\r\n\r\nfunction handleChange(value) {\r\n}\r\n\r\nconst BelowHeader = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const {locale} = useSelector(({settings}) => settings);\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-header-horizontal gx-header-horizontal-dark gx-below-header-horizontal\">\r\n      <div className=\"gx-header-horizontal-top\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-top-flex\">\r\n            <div className=\"gx-header-horizontal-top-left\">\r\n              <i className=\"icon icon-alert gx-mr-3\"/>\r\n              <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n            </div>\r\n            <ul className=\"gx-login-list\">\r\n              <li>Login</li>\r\n              <li>Signup</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Header\r\n        className=\"gx-header-horizontal-main\">\r\n        <div className=\"gx-container\">\r\n          <div className=\"gx-header-horizontal-main-flex\">\r\n\r\n            <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n                 }}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"gx-header-search gx-d-none gx-d-lg-flex\">\r\n              <SearchBox styleName=\"gx-lt-icon-search-bar-lg\"\r\n                         placeholder=\"Search in app...\"\r\n                         onChange={updateSearchChatUser}\r\n                         value={searchText}/>\r\n\r\n              <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\r\n                <Option value=\"jack\">Products</Option>\r\n                <Option value=\"lucy\">Apps</Option>\r\n                <Option value=\"Yiminghe\">Blogs</Option>\r\n              </Select>\r\n            </div>\r\n\r\n            <ul className=\"gx-header-notifications gx-ml-auto\">\r\n              <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n                  <div className=\"gx-d-flex\"><Dropdown overlay={menu}>\r\n                    <Button>\r\n                      Category <Icon type=\"down\"/>\r\n                    </Button>\r\n                  </Dropdown>\r\n                    <SearchBox styleName=\"gx-popover-search-bar\"\r\n                               placeholder=\"Search in app...\"\r\n                               onChange={updateSearchChatUser}\r\n                               value={searchText}/></div>\r\n                } trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-notify\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                         trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n                </Popover>\r\n              </li>\r\n\r\n              <li className=\"gx-msg\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={<MailNotification/>} trigger=\"click\">\r\n                <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\"/>\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-language\">\r\n                <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                         content={languageMenu()} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-flex-row gx-align-items-center\"><i\r\n                className={`flag flag-24 flag-${locale.icon}`}/>\r\n              </span>\r\n                </Popover>\r\n              </li>\r\n              <li className=\"gx-user-nav\"><UserInfo/></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n\r\n      {width >= TAB_SIZE && (\r\n        <div className=\"gx-header-horizontal-nav gx-header-horizontal-nav-curve\">\r\n          <div className=\"gx-container\">\r\n            <div className=\"gx-header-horizontal-nav-flex\">\r\n              <HorizontalNav/>\r\n              <ul className=\"gx-header-notifications gx-ml-auto\">\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-menu-lines\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-setting\"/></span></li>\r\n                <li><span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-apps-new\"/></span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BelowHeader;\r\n","import React, {useState} from \"react\";\r\nimport {Layout, Popover} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport languageData from \"./languageData\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../appRedux/actions\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport UserInfo from \"../../components/UserInfo\";\r\nimport AppNotification from \"../../components/AppNotification\";\r\nimport MailNotification from \"../../components/MailNotification\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\n\r\nimport {NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, TAB_SIZE} from \"../../constants/ThemeSetting\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst Topbar = () => {\r\n\r\n  const {locale, navStyle} = useSelector(({settings}) => settings);\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const [searchText, setSearchText] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {languageData.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={() =>\r\n            dispatch(switchLanguage(language))\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  const updateSearchChatUser = (evt) => {\r\n    setSearchText(evt.target.value);\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      {navStyle === NAV_STYLE_DRAWER || ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) && width < TAB_SIZE) ?\r\n        <div className=\"gx-linebar gx-mr-3\">\r\n          <i className=\"gx-icon-btn icon icon-menu\"\r\n             onClick={() => {\r\n               dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n             }}\r\n          />\r\n        </div> : null}\r\n\r\n      <SearchBox styleName=\"gx-d-none gx-d-lg-block gx-lt-icon-search-bar-lg\"\r\n                 placeholder=\"Search in app...\"\r\n                 onChange={updateSearchChatUser}\r\n                 value={searchText}/>\r\n      <ul className=\"gx-header-notifications gx-ml-auto\">\r\n        <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n          <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n            <SearchBox styleName=\"gx-popover-search-bar\"\r\n                       placeholder=\"Search in app...\"\r\n                       onChange={updateSearchChatUser}\r\n                       value={searchText}/>\r\n          } trigger=\"click\">\r\n            <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n          </Popover>\r\n        </li>\r\n        {width >= TAB_SIZE ? null :\r\n          <Auxiliary>\r\n            <li className=\"gx-notify\">\r\n              <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification/>}\r\n                       trigger=\"click\">\r\n                <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-notification\"/></span>\r\n              </Popover>\r\n            </li>\r\n\r\n            <li className=\"gx-msg\">\r\n              <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n                       content={<MailNotification/>} trigger=\"click\">\r\n                  <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                    <i className=\"icon icon-chat-new\"/>\r\n                    <span className=\"gx-status gx-status-rtl gx-small gx-orange\"/>\r\n                  </span>\r\n              </Popover>\r\n            </li>\r\n          </Auxiliary>\r\n        }\r\n        <li className=\"gx-language\">\r\n          <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={languageMenu()}\r\n                   trigger=\"click\">\r\n                <span className=\"gx-pointer gx-flex-row gx-align-items-center\">\r\n                  <i className={`flag flag-24 flag-${locale.icon}`}/>\r\n                  <span className=\"gx-pl-2 gx-language-name\">{locale.name}</span>\r\n                  <i className=\"icon icon-chevron-down gx-pl-2\"/>\r\n                </span>\r\n          </Popover>\r\n        </li>\r\n        {width >= TAB_SIZE ? null :\r\n          <Auxiliary>\r\n            <li className=\"gx-user-nav\"><UserInfo/></li>\r\n          </Auxiliary>\r\n        }\r\n      </ul>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React from \"react\";\r\nimport {Button, Card, Table} from \"antd\";\r\nimport { getCommits } from '../../appRedux/actions/Commit'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass CommitView extends React.Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.getCommits();\r\n  }\r\n\r\n  render() {\r\n    let {sortedInfo, filteredInfo} = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const { commits } = this.props;\r\n    const columns = [\r\n      {\r\n        title: 'Author',\r\n        dataIndex: 'authorName',\r\n        key: 'authorName'\r\n      },\r\n      {\r\n      title: 'Message',\r\n      dataIndex: 'message',\r\n      key: 'message '\r\n    }, {\r\n      title: 'Date',\r\n      dataIndex: 'commitDate',\r\n      key: 'commitDate'\r\n    }, {\r\n      title: 'Url',\r\n      dataIndex: 'commitUrl',\r\n      key: 'commitUrl',\r\n      render: text => <a href={text}>Commit View</a>\r\n    }];\r\n    return (\r\n      <Card title=\"Commits\">\r\n\r\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={commits} />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({commit}) => {\r\n const { commits } = commit;\r\n  return { commits }\r\n};\r\n\r\nexport default connect(mapStateToProps, {getCommits})(CommitView);\r\n","import {\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  INIT_URL,\r\n  COMMIT_DATA\r\n} from \"../../constants/ActionTypes\";\r\nimport axios from '../../util/Api';\r\n\r\nexport const setInitUrl = (url) => {\r\n  return {\r\n    type: INIT_URL,\r\n    payload: url\r\n  };\r\n};\r\n\r\n\r\nexport const getCommits = () => {\r\n  return (dispatch,getState) => {\r\n    dispatch({type: FETCH_START});\r\n    axios.get('/api/commit',\r\n    ).then(({data}) => {\r\n      console.log(\"getCommits: \", data);\r\n      if (data) {\r\n        dispatch({type: FETCH_SUCCESS });\r\n        dispatch({type: COMMIT_DATA, payload: data.data});\r\n      } else {\r\n        dispatch({type: FETCH_ERROR, payload: data});\r\n      }\r\n    }).catch(function (error) {\r\n      dispatch({type: FETCH_ERROR, payload: error.message});\r\n      console.log(\"Error****:\", error.message);\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const ResetStates = (couponCode) => {\r\n  return (dispatch,getState) => {\r\n    dispatch({type: COMMIT_DATA, payload: []});\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\n\r\nimport commitView from \"./commitView/index\";\r\n\r\n\r\nconst App = ({match}) => (\r\n  <div className=\"gx-main-content-wrapper\">\r\n    <Switch>\r\n      <Route path={`${match.url}commits`} component={commitView}/>\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toggleCollapsedSideNav} from \"../../../appRedux/actions\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst NoHeaderNotification = () => {\r\n  const dispatch = useDispatch();\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n\r\n  return (\r\n    <div className=\"gx-no-header-horizontal\">\r\n      <div className=\"gx-d-block gx-d-lg-none gx-linebar gx-mr-xs-3\">\r\n        <i className=\"gx-icon-btn icon icon-menu\"\r\n           onClick={() => {\r\n             dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n           }}\r\n        />\r\n      </div>\r\n      <div className=\"gx-no-header-horizontal-top\">\r\n        <div className=\"gx-no-header-horizontal-top-center\">\r\n          <i className=\"icon icon-alert gx-mr-3\"/>\r\n          <p className=\"gx-mb-0 gx-text-truncate\"><IntlMessages id=\"app.announced\"/></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NoHeaderNotification;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  TAB_SIZE,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst SidebarLogo = ({sidebarCollapsed, setSidebarCollapsed}) => {\r\n  const {width, themeType} = useSelector(({settings}) => settings);\r\n  let navStyle = useSelector(({settings}) => settings.navStyle);\r\n  if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\r\n    navStyle = NAV_STYLE_DRAWER;\r\n  }\r\n\r\n  return (\r\n    <div className=\"gx-layout-sider-header\">\r\n      {(navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) ? <div className=\"gx-linebar\">\r\n        <i\r\n          className={`gx-icon-btn icon icon-${!sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} ${themeType !== THEME_TYPE_LITE ? 'gx-text-white' : ''}`}\r\n          onClick={() => {\r\n            setSidebarCollapsed(!sidebarCollapsed)\r\n          }}\r\n        />\r\n      </div> : null}\r\n\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarLogo;\r\n","import React from \"react\";\r\nimport {Avatar, Popover} from \"antd\";\r\n\r\nconst UserProfile = () => {\r\n  const userMenuOptions = (\r\n    <ul className=\"gx-user-popover\">\r\n      <li>My Account</li>\r\n      <li>Connections</li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className=\"gx-flex-row gx-align-items-center gx-mb-4 gx-avatar-row\">\r\n      <Popover placement=\"bottomRight\" content={userMenuOptions} trigger=\"click\">\r\n        <Avatar src={\"https://via.placeholder.com/150\"} className=\"gx-size-40 gx-pointer gx-mr-3\" alt=\"\"/>\r\n        <span className=\"gx-avatar-name\">Miguel Báez<i className=\"icon icon-chevron-down gx-fs-xxs gx-ml-2\"/></span>\r\n      </Popover>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\n\r\nconst AppsNavigation = () =>\r\n  <ul className=\"gx-app-nav\">\r\n    <li><i className=\"icon icon-search-new\"/></li>\r\n    <li><i className=\"icon icon-notification\"/></li>\r\n    <li><i className=\"icon icon-chat-new\"/></li>\r\n  </ul>;\r\n\r\nexport default AppsNavigation;\r\n","import React from \"react\";\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport SidebarLogo from \"./SidebarLogo\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport AppsNavigation from \"./AppsNavigation\";\r\nimport {\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst SidebarContent = ({sidebarCollapsed, setSidebarCollapsed}) => {\r\n  const {navStyle, themeType} = useSelector(({settings}) => settings);\r\n  const pathname = useSelector(({common}) => common.pathname);\r\n\r\n  const getNoHeaderClass = (navStyle) => {\r\n    if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\r\n      return \"gx-no-header-notifications\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const selectedKeys = pathname.substr(1);\r\n  const defaultOpenKeys = selectedKeys.split('/')[1];\r\n\r\n  return (\r\n    <>\r\n      <SidebarLogo sidebarCollapsed={sidebarCollapsed} setSidebarCollapsed={setSidebarCollapsed}/>\r\n      <div className=\"gx-sidebar-content\">\r\n        <div className={`gx-sidebar-notifications ${getNoHeaderClass(navStyle)}`}>\r\n          <UserProfile/>\r\n          <AppsNavigation/>\r\n        </div>\r\n        <CustomScrollbars className=\"gx-layout-sider-scrollbar\">\r\n          <Menu\r\n            defaultOpenKeys={[defaultOpenKeys]}\r\n            selectedKeys={[selectedKeys]}\r\n            theme={themeType === THEME_TYPE_LITE ? 'lite' : 'dark'}\r\n            mode=\"inline\">      \r\n\r\n            <Menu.Item key=\"main/layouts\">\r\n              <Link to=\"/commits\"><i className=\"icon icon-card\"/>\r\n                <span> <IntlMessages id=\"repomanager.commits\"/></span></Link>\r\n            </Menu.Item>\r\n\r\n          </Menu>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SidebarContent);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Drawer, Layout} from \"antd\";\r\n\r\nimport SidebarContent from \"./SidebarContent\";\r\nimport {toggleCollapsedSideNav} from \"../../appRedux/actions\";\r\nimport {\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  TAB_SIZE,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst {Sider} = Layout;\r\n\r\nconst Sidebar = () => {\r\n  let [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const {themeType, navStyle} = useSelector(({settings}) => settings);\r\n  const navCollapsed = useSelector(({common}) => common.navCollapsed);\r\n  const width = useSelector(({common}) => common.width);\r\n  const dispatch = useDispatch();\r\n\r\n  const onToggleCollapsedNav = () => {\r\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSidebarCollapsed(navStyle === NAV_STYLE_MINI_SIDEBAR)\r\n  }, [navStyle])\r\n\r\n  let drawerStyle = \"gx-collapsed-sidebar\";\r\n\r\n  if (navStyle === NAV_STYLE_FIXED) {\r\n    drawerStyle = \"\";\r\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\r\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\r\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\r\n    drawerStyle = \"gx-custom-sidebar\"\r\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\r\n    drawerStyle = \"gx-mini-sidebar\";\r\n  } else if (navStyle === NAV_STYLE_DRAWER) {\r\n    drawerStyle = \"gx-collapsed-sidebar\"\r\n  }\r\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR\r\n    || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\r\n    drawerStyle = \"gx-collapsed-sidebar\"\r\n  }\r\n\r\n  return (\r\n    <Sider\r\n      className={`gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`}\r\n      trigger={null}\r\n      collapsed={(width < TAB_SIZE ? false : sidebarCollapsed || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR)}\r\n      theme={themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\"}\r\n      collapsible>\r\n      {\r\n        navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ?\r\n          <Drawer\r\n            className={`gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`}\r\n            placement=\"left\"\r\n            closable={false}\r\n            onClose={onToggleCollapsedNav}\r\n            visible={navCollapsed}>\r\n            <SidebarContent sidebarCollapsed={sidebarCollapsed} setSidebarCollapsed={setSidebarCollapsed}/>\r\n          </Drawer> :\r\n          <SidebarContent sidebarCollapsed={sidebarCollapsed} setSidebarCollapsed={setSidebarCollapsed}/>\r\n      }\r\n    </Sider>)\r\n};\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE\r\n} from \"../../constants/ThemeSetting\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\nconst SIDEBAR_VISIBLE_ON = [NAV_STYLE_FIXED, NAV_STYLE_DRAWER, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR];\r\n\r\nconst AppSidebar = ({navStyle}) => {\r\n  const width = useSelector(({common}) => common.width);\r\n\r\n  if (width < TAB_SIZE || SIDEBAR_VISIBLE_ON.includes(navStyle)) {\r\n    return <Sidebar/>;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default React.memo(AppSidebar);\r\n","import React, {useEffect} from \"react\";\r\nimport {Layout} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport HorizontalDefault from \"../Topbar/HorizontalDefault/index\";\r\nimport HorizontalDark from \"../Topbar/HorizontalDark/index\";\r\nimport InsideHeader from \"../Topbar/InsideHeader/index\";\r\nimport AboveHeader from \"../Topbar/AboveHeader/index\";\r\n\r\nimport BelowHeader from \"../Topbar/BelowHeader/index\";\r\nimport Topbar from \"../Topbar/index\";\r\nimport {footerText} from \"../../util/config\";\r\nimport App from \"../../routes/index\";\r\n\r\nimport {\r\n  NAV_STYLE_ABOVE_HEADER,\r\n  NAV_STYLE_BELOW_HEADER,\r\n  NAV_STYLE_DARK_HORIZONTAL,\r\n  NAV_STYLE_DEFAULT_HORIZONTAL,\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_INSIDE_HEADER_HORIZONTAL,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR\r\n} from \"../../constants/ThemeSetting\";\r\nimport NoHeaderNotification from \"../Topbar/NoHeaderNotification/index\";\r\nimport {useRouteMatch} from \"react-router-dom\";\r\nimport {updateWindowWidth} from \"../../appRedux/actions\";\r\nimport AppSidebar from \"./AppSidebar\";\r\n\r\nconst {Content, Footer} = Layout;\r\n\r\nconst getContainerClass = (navStyle) => {\r\n  switch (navStyle) {\r\n    case NAV_STYLE_DARK_HORIZONTAL:\r\n      return \"gx-container-wrap\";\r\n    case NAV_STYLE_DEFAULT_HORIZONTAL:\r\n      return \"gx-container-wrap\";\r\n    case NAV_STYLE_INSIDE_HEADER_HORIZONTAL:\r\n      return \"gx-container-wrap\";\r\n    case NAV_STYLE_BELOW_HEADER:\r\n      return \"gx-container-wrap\";\r\n    case NAV_STYLE_ABOVE_HEADER:\r\n      return \"gx-container-wrap\";\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst getNavStyles = (navStyle) => {\r\n  switch (navStyle) {\r\n    case NAV_STYLE_DEFAULT_HORIZONTAL :\r\n      return <HorizontalDefault/>;\r\n    case NAV_STYLE_DARK_HORIZONTAL :\r\n      return <HorizontalDark/>;\r\n    case NAV_STYLE_INSIDE_HEADER_HORIZONTAL :\r\n      return <InsideHeader/>;\r\n    case NAV_STYLE_ABOVE_HEADER :\r\n      return <AboveHeader/>;\r\n    case NAV_STYLE_BELOW_HEADER :\r\n      return <BelowHeader/>;\r\n    case NAV_STYLE_FIXED :\r\n      return <Topbar/>;\r\n    case NAV_STYLE_DRAWER :\r\n      return <Topbar/>;\r\n    case NAV_STYLE_MINI_SIDEBAR :\r\n      return <Topbar/>;\r\n    case NAV_STYLE_NO_HEADER_MINI_SIDEBAR :\r\n      return <NoHeaderNotification/>;\r\n    case NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR :\r\n      return <NoHeaderNotification/>;\r\n    default :\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MainApp = () => {\r\n  const {navStyle} = useSelector(({settings}) => settings);\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      dispatch(updateWindowWidth(window.innerWidth));\r\n    })\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Layout className=\"gx-app-layout\">\r\n      <AppSidebar navStyle={navStyle}/>\r\n      <Layout>\r\n        {getNavStyles(navStyle)}\r\n        <Content className={`gx-layout-content ${getContainerClass(navStyle)} `}>\r\n          <App match={match}/>\r\n          <Footer>\r\n            <div className=\"gx-layout-footer-content\">\r\n              {footerText}\r\n            </div>\r\n          </Footer>\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n};\r\nexport default MainApp;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {ConfigProvider} from 'antd';\r\nimport {IntlProvider} from \"react-intl\";\r\n\r\nimport AppLocale from \"../../lngProvider\";\r\nimport MainApp from \"./MainApp\";\r\n\r\nimport {\r\n  LAYOUT_TYPE_BOXED,\r\n  LAYOUT_TYPE_FRAMED,\r\n  LAYOUT_TYPE_FULL,\r\n  NAV_STYLE_ABOVE_HEADER,\r\n  NAV_STYLE_BELOW_HEADER,\r\n  NAV_STYLE_DARK_HORIZONTAL,\r\n  NAV_STYLE_DEFAULT_HORIZONTAL,\r\n  NAV_STYLE_INSIDE_HEADER_HORIZONTAL,\r\n  THEME_TYPE_DARK\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst setLayoutType = (layoutType) => {\r\n  if (layoutType === LAYOUT_TYPE_FULL) {\r\n    document.body.classList.remove('boxed-layout');\r\n    document.body.classList.remove('framed-layout');\r\n    document.body.classList.add('full-layout');\r\n  } else if (layoutType === LAYOUT_TYPE_BOXED) {\r\n    document.body.classList.remove('full-layout');\r\n    document.body.classList.remove('framed-layout');\r\n    document.body.classList.add('boxed-layout');\r\n  } else if (layoutType === LAYOUT_TYPE_FRAMED) {\r\n    document.body.classList.remove('boxed-layout');\r\n    document.body.classList.remove('full-layout');\r\n    document.body.classList.add('framed-layout');\r\n  }\r\n};\r\n\r\nconst setNavStyle = (navStyle) => {\r\n  if (navStyle === NAV_STYLE_DEFAULT_HORIZONTAL ||\r\n    navStyle === NAV_STYLE_DARK_HORIZONTAL ||\r\n    navStyle === NAV_STYLE_INSIDE_HEADER_HORIZONTAL ||\r\n    navStyle === NAV_STYLE_ABOVE_HEADER ||\r\n    navStyle === NAV_STYLE_BELOW_HEADER) {\r\n    document.body.classList.add('full-scroll');\r\n    document.body.classList.add('horizontal-layout');\r\n  } else {\r\n    document.body.classList.remove('full-scroll');\r\n    document.body.classList.remove('horizontal-layout');\r\n  }\r\n};\r\n\r\nconst App = (props) => {\r\n  const {match, location} = props;\r\n  const locale = useSelector(({settings}) => settings.locale);\r\n  const navStyle = useSelector(({settings}) => settings.navStyle);\r\n  const layoutType = useSelector(({settings}) => settings.layoutType);\r\n  const themeType = useSelector(({settings}) => settings.themeType);\r\n  const isDirectionRTL = useSelector(({settings}) => settings.isDirectionRTL);\r\n\r\n  useEffect(() => {\r\n    if (isDirectionRTL) {\r\n      document.documentElement.classList.add('rtl');\r\n      document.documentElement.setAttribute('data-direction', 'rtl')\r\n    } else {\r\n      document.documentElement.classList.remove('rtl');\r\n      document.documentElement.setAttribute('data-direction', 'ltr')\r\n    }\r\n  }, [isDirectionRTL]);\r\n\r\n  useEffect(() => {\r\n    if (locale)\r\n      document.documentElement.lang = locale.locale;\r\n  }, [locale]);\r\n\r\n  useEffect(() => {\r\n    if (themeType === THEME_TYPE_DARK) {\r\n      document.body.classList.add('dark-theme');\r\n    } else if (document.body.classList.contains('dark-theme')) {\r\n      document.body.classList.remove('dark-theme');\r\n    }\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setLayoutType(layoutType);\r\n    setNavStyle(navStyle);\r\n  }, [layoutType, navStyle]);\r\n\r\n  if (location.pathname === '/') {\r\n    return (<Redirect to={'/commits'}/>);\r\n  }\r\n\r\n  const currentAppLocale = AppLocale[locale.locale];\r\n\r\n  return (\r\n    <ConfigProvider locale={currentAppLocale.antd} direction={isDirectionRTL ? 'rtl' : 'ltr'}>\r\n      <IntlProvider\r\n        locale={currentAppLocale.locale}\r\n        messages={currentAppLocale.messages}>\r\n        <Route path={`${match.url}`} component={MainApp}/>\r\n      </IntlProvider>\r\n    </ConfigProvider>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport \"assets/vendors/style\";\r\nimport \"./styles/repo-manager.less\";\r\n\r\nimport configureStore, { history } from './appRedux/store';\r\nimport App from \"./containers/App/index\";\r\n\r\nconst store = configureStore();\r\n\r\nconst NextApp = () =>\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route path=\"/\" component={App}/>\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>;\r\n\r\n\r\nexport default NextApp;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport NextApp from './NextApp';\r\nimport * as serviceWorker from './registerServiceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<NextApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}